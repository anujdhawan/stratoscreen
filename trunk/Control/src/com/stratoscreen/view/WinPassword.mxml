<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="300" height="130" title="Enter password" 
			   creationComplete="creationCompleteHandler(event)" close="closeHandler(event)">
	<fx:Declarations>
		<mx:StringValidator id="validPassword" source="{txtPassword}" minLength="5" property="text" />									
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.stratoscreen.managers.AppManager;
			import com.stratoscreen.utils.SecurityUtils;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			
			import spark.events.TextOperationEvent;
			
			private var _controlPanel:ControlPanel;
			private var _appManager:AppManager;
			private var _success:Boolean = false;

			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				_controlPanel = this.parentApplication as ControlPanel;
				_appManager = _controlPanel.appManager; 
			}

			protected function closeHandler(event:CloseEvent):void
			{
				// Send the event manually if needed
				if (event == null) {this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE));}
				PopUpManager.removePopUp(this);
			}
			
			public function get success():Boolean
			{
				return _success;
			}
			
			protected function btnOK_clickHandler(event:MouseEvent):void
			{
				if (!validPassword.validate()) {return;}
					
				// Try and decrypt the stored passwords
				var accessKey:String = SecurityUtils.simpleDecrypt(_controlPanel.encryptedAccessKey, 0, txtPassword.text);
				var secretKey:String = SecurityUtils.simpleDecrypt(_controlPanel.encryptedSecretKey, 0, txtPassword.text);

				txtPassword.errorString = "";
				if (accessKey == "" || secretKey == "")
				{
					txtPassword.errorString = "Incorrect password";
					return;
				}
				
				// We have a matching password. Save the decrypted values and move on. 
				_appManager.accessKey = accessKey;
				_appManager.secretKey = secretKey;
				_success = true;
				closeHandler(null);
			}


			protected function txtPassword_changeHandler(event:TextOperationEvent):void
			{
				txtPassword.text = StringUtil.trim(txtPassword.text);
			}


		]]>
	</fx:Script>
	<s:Label x="10" y="10" text="Enter password to decrypt stored Amazon keys."/>
	<s:TextInput id="txtPassword" x="10" y="30" width="272"  enter="btnOK_clickHandler(null)" displayAsPassword="true"/>
	<s:Button label="OK" width="60" id="btnOK" click="btnOK_clickHandler(event)" horizontalCenter="0" bottom="10" chromeColor="#C2D6FF"/>
</s:TitleWindow>
