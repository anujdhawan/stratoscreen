<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" xmlns:components="com.stratoscreen.components.*"
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="600" minHeight="300" title="Select Media" 
			   close="closeHandler(event)" creationComplete="creationCompleteHandler(event)" >
	<fx:Script>
		<![CDATA[
			import com.stratoscreen.Constants;
			import com.stratoscreen.managers.AppManager;
			import com.stratoscreen.model.domains.Medias;
			import com.stratoscreen.renderers.MediaItem;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			
			[Bindable] private var _medias:ArrayCollection;
			private var _appManager:AppManager;
			private var _canceled:Boolean = true;
			private var _selectedMedia:Medias = null;
			
			public function get canceled():Boolean
			{
				return _canceled;
			}
			
			public function get selectedMedia():Medias
			{
				return _selectedMedia;
			}

			public function itemClick(item:MediaItem):void
			{
				_selectedMedia = item.data as Medias;
				_canceled = false;
				closeHandler(null);
			}

			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				
				_appManager = this.parentApplication.appManager;
				_appManager.currentEditWindow = this;	// Make sure this is set back after it is closed
				_medias = new ArrayCollection();
				_medias.source = _appManager.medias;
				_medias.filterFunction = filterMedia;
				
				searchBox.addEventListener(SearchBox.SEARCH_SEARCH, searchHandler);
				searchBox.addEventListener(SearchBox.SEARCH_CLEARED, searchHandler);

				// Default to a sort by name
				var sort:Sort = new Sort();
				sort.fields = [new SortField("name", true)];				
				_medias.sort = sort;
				_medias.refresh();			
			}

			protected function closeHandler(event:CloseEvent):void
			{
				if (event == null) {this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE));}
				PopUpManager.removePopUp(this);
			}

			private function filterMedia(item:Object):Boolean
			{
				if (item.deleted) {return false;} // Always hide the deleted itens
				if (!item.uploaded) {return false;} // Cannot work with files until they are uploaded
				if (item.mediaType == Constants.MEDIA_TYPE_AUDIO) {return false;}
				
				var mediaName:String = item.name.toLowerCase();
				var searchText:String = searchBox.txtSearch.text.toLowerCase();
				searchText = StringUtil.trim(searchText);
				
				return mediaName.indexOf(searchText) >= 0;
			}
			
			private function searchHandler(event:Event):void
			{
				_medias.refresh();
			}
		]]>
	</fx:Script>
	<s:List itemRenderer=" com.stratoscreen.renderers.MediaItem" dataProvider="{_medias}" borderVisible="false" left="5" top="35" bottom="5" right="5">
		<s:layout>
			<s:TileLayout orientation="rows"/>
		</s:layout>			
	</s:List>
	<components:SearchBox id="searchBox" right="5" top="5" width="50%" />
	<s:controlBarContent>	
	</s:controlBarContent>
</s:TitleWindow>
