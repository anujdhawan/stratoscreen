<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:view="com.stratoscreen.view.*" xmlns:components="com.stratoscreen.components.*"
		 width="100%" height="135" contentBackgroundAlpha="0.0" creationComplete="creationCompleteHandler(event)" hide="hideHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.stratoscreen.Constants;
			import com.stratoscreen.aws.SDBEvent;
			import com.stratoscreen.managers.AppManager;
			import com.stratoscreen.model.domains.MediaGroups;
			import com.stratoscreen.model.views.CountRows;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			
			public static const DETAIL_CLOSE:String = "DETAIL_CLOSE";
			public static const GROUP_DELETE:String = "GROUP_DELETE";
			public static const GROUP_EDIT:String = "GROUP_EDIT";
			
			[Bindable][Embed(source="/assets/icons/cross.png")]
			private var iconClose:Class;			
			[Bindable] private var _mediaGroup:MediaGroups;
			private var _appManager:AppManager;
			[Bindable] private var _canEdit:Boolean = false;;
			
			public function get mediaGroup():MediaGroups
			{
				return _mediaGroup;
			}			
			
			public function set mediaGroup(value:MediaGroups):void
			{
				_mediaGroup = value;
				if (_mediaGroup == null) {return;}
				if (groupMain == null) {return;}	//still renedering			
				
				_canEdit = _appManager.currentUser.type == Constants.USER_TYPE_MANAGER || _mediaGroup.createdBy == _appManager.currentUser.itemName;
				var formatter:DateFormatter = new DateFormatter();
				formatter.formatString = "MMM D, YYYY";
				lblCreated.text = formatter.format(_mediaGroup.createdDate);					
				lblModified.text = formatter.format(_mediaGroup.modifiedDate);		
				lblCount.text = " ";	// We will get in a second
			
				// Display the plat type
				if (_mediaGroup.type == Constants.GROUP_TYPE_RANDOM)
				{
					lblOrder.text = "Random";;
				}
				else if (_mediaGroup.type == Constants.GROUP_TYPE_SEQUENCE)
				{
					// Sequential groups may need sorted
					if (_mediaGroup.playOrder == Constants.GROUP_SORT_NONE)
					{
						lblOrder.text = "Sequential";
					}
					else if (_mediaGroup.playOrder == Constants.GROUP_SORT_ALPHA)
					{
						lblOrder.text = "Alphabetic";
					}
					else if (_mediaGroup.playOrder == Constants.GROUP_SORT_ALPHA_DESC)
					{
						lblOrder.text = "Descending alphabetic";
					}
					else if (_mediaGroup.playOrder == Constants.GROUP_SORT_FIFO)
					{
						lblOrder.text = "FIFO (date)";
					}
					else if (_mediaGroup.playOrder == Constants.GROUP_SORT_LIFO)
					{
						lblOrder.text = "LIFO (date descending)";
					}
				}
				
				// Show the play count if added
				lblPlayCount.visible = !_mediaGroup.playAllBool;
				txtPlayCount.visible = !_mediaGroup.playAllBool
				txtPlayCount.text = _mediaGroup.playCount;

				// Find the user who owns this item
				for (var i:int = 0; i < _appManager.usersHdrs.length; i++)
				{
					if (_appManager.usersHdrs[i].itemName == _mediaGroup.createdBy)
					{
						lblCreatedBy.text = _appManager.usersHdrs[i].firstName + " " + 
							_appManager.usersHdrs[i].lastName;
					}
					
					if (_appManager.usersHdrs[i].itemName == _mediaGroup.modifiedBy)
					{
						lblModifiedBy.text = _appManager.usersHdrs[i].firstName + " " + 
							_appManager.usersHdrs[i].lastName;
					}
				}				
				
				// Find out how many items we have in this
				var sql:String = "Select count(*) from MediaGroupDetail where mediaGroupId='" + _mediaGroup.itemName + "'";
				_appManager.sdb.select(sql, queryHandler, CountRows);
			}
			
			public function editGroup():void
			{
				linkEdit_clickHandler(null);
			}
			
			private function queryHandler(event:SDBEvent):void
			{
				lblCount.text = event.result[0].Count;
			}

			protected function creationCompleteHandler(event:FlexEvent):void
			{
				_appManager = this.parentApplication.appManager;
				this.mediaGroup = _mediaGroup;
			}
			
			protected function btnClose_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent(new Event(DETAIL_CLOSE));
			}
			
			protected function linkEdit_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent(new Event(GROUP_EDIT));
				previewPlayer.stop();
			}
			
			protected function linkDelete_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent(new Event(GROUP_DELETE));
			}

			protected function hideHandler(event:FlexEvent):void
			{
				previewPlayer.stop();
			}

		]]>
	</fx:Script>
	
	<s:BorderContainer styleName="DetailBand" left="1" top="1" right="1" bottom="1" >
		<s:HGroup id="groupMain" width="100%" height="100%" verticalAlign="middle">
			<mx:Spacer width="0" />
			<components:MediaGroupPlayer id="previewPlayer"  height="{this.height-6}" width="150" mediaGroup="{_mediaGroup}" viewMode="L" />
			<s:Line rotation="90" height="90%" >
				<s:stroke>
					<s:SolidColorStroke color="#3E63C1" weight="1" />
				</s:stroke>				
			</s:Line>			
			<s:Group height="100%" >
				<s:Label x="0" y="10" text="Name" fontWeight="bold"/>
				<s:Label x="75" y="10" text="{_mediaGroup.name}" maxWidth="300"/>
				<s:Label x="0" y="32" text="Group count" fontWeight="bold"/>
				<s:Label id="lblCount"  x="75" y="32" />				
				<s:Label x="0" y="54" text="Order" fontWeight="bold"/>
				<s:Label id="lblOrder"  x="75" y="54" />				
				<s:Label id="lblPlayCount" x="0" y="76" text="Play count" fontWeight="bold"/>
				<s:Label id="txtPlayCount" x="75" y="76" />				
			</s:Group>
			<mx:Spacer width="10" />
			<s:Group height="100%" >
				<s:Label x="0" y="10" text="Created" fontWeight="bold"/>
				<s:Label x="75" y="10" text=" " id="lblCreated"/>
				<s:Label x="0" y="32" text="Created by" fontWeight="bold"/>
				<s:Label x="75" y="32" text=" " id="lblCreatedBy"/>
				<s:Label x="0" y="54" text="Modified" fontWeight="bold"/>
				<s:Label x="75" y="54" text=" " id="lblModified"/>
				<s:Label x="0" y="76" text="Modified by" fontWeight="bold"/>
				<s:Label x="75" y="76" text=" " id="lblModifiedBy"/>
			</s:Group>		
			<mx:Spacer width="100%" />
			<s:VGroup height="100%" maxWidth="125" paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2" textAlign="right">				
				<s:HGroup width="100%">
					<mx:Spacer width="100%" />
					<components:IconButton id="btnClose" click="btnClose_clickHandler(event)" icon="{iconClose}" />
				</s:HGroup>
				<mx:Spacer height="100%" />
				<components:IconButton label="Edit Group" id="linkEdit" icon="@Embed(source='/assets/icons/pencil.png')"  
									   width="{linkDelete.width}" click="linkEdit_clickHandler(event)" enabled="{_canEdit}"/>
				<components:IconButton label="Delete Group" id="linkDelete" icon="@Embed(source='/assets/icons/delete.png')" 
									    click="linkDelete_clickHandler(event)" enabled="{_canEdit}" isDelete="true"/>
			</s:VGroup>
		</s:HGroup>
	</s:BorderContainer>
</s:Group>
