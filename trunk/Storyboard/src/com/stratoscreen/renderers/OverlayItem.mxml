<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="com.stratoscreen.components.*" 
				xmlns:renderers="com.stratoscreen.renderers.*"  autoDrawBackground="true" height="28" 
				creationComplete="this_creationCompleteHandler(event)"  >
	<fx:Declarations>
		<renderers:MediaThumbItem id="mediaThumb" data="{_media}" width="36" height="26" verticalCenter="0" horizontalCenter="0"  />
		<s:Image id="imgFont" width="16" height="16" source="@Embed('assets/icons/font.png')" verticalCenter="0" horizontalCenter="0"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.stratoscreen.managers.AppManager;
			import com.stratoscreen.model.domains.Medias;
			import com.stratoscreen.model.domains.OverlayDetail;
			
			import mx.events.FlexEvent;

			private static var _appManager:AppManager;

			[Bindable] private var _overlayDetail:OverlayDetail;
			[Bindable] private var _name:String;
			[Bindable] private var _media:Medias;
			private var _data:Object;
			
			protected function this_creationCompleteHandler(event:FlexEvent):void
			{
				if (_appManager == null) {_appManager = this.parentApplication.appManager;}	
				this.data = _data // Draw the renderer
			}
			
			public override function set selected(value:Boolean):void
			{
				super.selected = value;
			}
			
			public override function set data(value:Object):void
			{
				if (_appManager == null) {_appManager = this.parentApplication.appManager;}	

				if (value== null) {return;}
				if (borderMain == null) {return;}		// Item is still renderering		
				if (!(value is OverlayDetail)) {return;}		// Unexpected type
				
				_overlayDetail = value as OverlayDetail;
				
				// Get the media associated with this OverlayDetail
				_media = null;
				groupIcon.removeAllElements();
				if (_overlayDetail.type == OverlayDetail.TYPE_TEXT)
				{
					_name = _overlayDetail.text;
					groupIcon.addElement(imgFont);
				}				
				else if (_overlayDetail.type == OverlayDetail.TYPE_MEDIA)
				{
					for each (var media:Medias in _appManager.medias)
					{
						if (media.itemName == _overlayDetail.mediaId)
						{
							_media = media;
							_name = _media.name;
							break;
						}
					}
						
					if (media != null) {groupIcon.addElement(mediaThumb);}
				}
				
				setBackground(); 
			}
			
			public override function get data():Object
			{
				return _data;
			}	
			
			private function setBackground():void
			{
				var color:uint
				if (this.selected)
				{
					color = _overlayDetail.hasError ? 0xFFA0A0 : 0xD8E2F3; // Darker
				}
				else
				{
					color = _overlayDetail.hasError ? 0xFFC0C0 : 0xF0F4FE;
				}
				
				borderMain.setStyle("backgroundColor", color);					
			}
			
			protected function btnOptions_clickHandler(event:MouseEvent):void
			{
				Object(_appManager.currentEditWindow).clearSelection();
			}
			
		]]>
	</fx:Script>
	
	<s:BorderContainer id="borderMain" styleName="DragItem" width="100%" height="28">
		<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="2">
			<mx:Spacer />
			<components:AttributeOptions id="btnOptions" buttonOnly="true"
										 click="btnOptions_clickHandler(event)"
										 overlayDetail="{_overlayDetail}"/> 

			<s:Group id="groupIcon" width="36" height="26">
				
			</s:Group>
			<s:Label text="{_name}" maxDisplayedLines="1"  width="100%"/>
		</s:HGroup>
	</s:BorderContainer>		
</s:ItemRenderer>
